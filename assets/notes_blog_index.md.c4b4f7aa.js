import{o as e,c as a,a as r,F as n,r as t,t as d,d as i}from"./app.33b7e8d5.js";const s='{"title":"vitepress 使用","description":"","frontmatter":{},"headers":[{"level":2,"title":"在Markdown中使用Vue","slug":"在markdown中使用vue"},{"level":3,"title":"插值（Interpolation）","slug":"插值（interpolation）"},{"level":3,"title":"指令（Directives）","slug":"指令（directives）"},{"level":3,"title":"逃逸(Escaping)","slug":"逃逸-escaping"},{"level":3,"title":"使用组建","slug":"使用组建"}],"relativePath":"notes/blog/index.md","lastUpdated":1619600988786}',o={},p=i('<h1 id="vitepress-使用"><a class="header-anchor" href="#vitepress-使用" aria-hidden="true">#</a> vitepress 使用</h1><h2 id="在markdown中使用vue"><a class="header-anchor" href="#在markdown中使用vue" aria-hidden="true">#</a> 在Markdown中使用Vue</h2><h3 id="插值（interpolation）"><a class="header-anchor" href="#插值（interpolation）" aria-hidden="true">#</a> 插值（Interpolation）</h3><p>每个标记文件首先被编译成HTML，然后作为Vue组件传递给Vite进程管道。这意味着您可以在文本中使用Vue样式的插值：</p><p><strong>输入</strong></p><div class="language-"><pre><code>{{1+1}}\n</code></pre></div><p><strong>输出</strong></p><div class="language-"><pre><code>2\n</code></pre></div><h3 id="指令（directives）"><a class="header-anchor" href="#指令（directives）" aria-hidden="true">#</a> 指令（Directives）</h3><p>指令同样也是工作的：</p><p><strong>输入</strong></p><div class="language-"><pre><code>&lt;span v-for=&quot;i in 3&quot;&gt;{{i}}&lt;/span&gt;\n</code></pre></div><p><strong>输出</strong></p>',13),l=i('<h3 id="逃逸-escaping"><a class="header-anchor" href="#逃逸-escaping" aria-hidden="true">#</a> 逃逸(Escaping)</h3><p>一般情况下输入</p><div class="language-"><pre><code>`{{1+1}}`\n</code></pre></div><p>会显示<br><code>2</code><br> 那么想要显示它的原始代码，应将代码块放在<code>v-pre</code>块中：</p><div class="language-"><pre><code>::: v-pre\n`{{1+1}}`\n:::\n</code></pre></div><p>显示结果如下：</p><div><p><code>{{1+1}}</code></p></div><h3 id="使用组建"><a class="header-anchor" href="#使用组建" aria-hidden="true">#</a> 使用组建</h3><p>当您需要更大的灵活性时，VitePress允许您使用自己的Vue组件扩展创作工具箱。</p><h4 id="在markdown中导入组件"><a class="header-anchor" href="#在markdown中导入组件" aria-hidden="true">#</a> 在markdown中导入组件</h4><p>如果您的组件将只在少数地方使用，那么推荐的使用方法是在使用它的文件中导入组件。</p><div class="language-"><pre><code># 文档\n\n这是一个.md文件正在使用一个自定义的组件\n\n&lt;CustomComponent /&gt;\n\n## 更多的文档\n\n...\n\n&lt;script setup&gt;\nimport CustomComponent from &#39;../components/CustomComponent.vue&#39;\n&lt;/script&gt;\n\n</code></pre></div><h4 id="使用全局组件"><a class="header-anchor" href="#使用全局组件" aria-hidden="true">#</a> 使用全局组件</h4>',13);o.render=function(i,s,o,c,h,u){return e(),a("div",null,[p,r("p",null,[(e(),a(n,null,t(3,(e=>r("span",null,d(e),1))),64))]),l])};export default o;export{s as __pageData};
