(window.webpackJsonp=window.webpackJsonp||[]).push([[316],{520:function(t,e,r){"use strict";r.r(e);var o=r(5),a=Object(o.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"websocket-springboot"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#websocket-springboot"}},[t._v("#")]),t._v(" websocket|springboot")]),t._v(" "),r("p",[r("strong",[t._v("添加必要的依赖")])]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n    <exclusions>\n        <exclusion>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-tomcat</artifactId>\n        </exclusion>\n    </exclusions>\n</dependency>\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-websocket</artifactId>\n</dependency>\n")])])]),r("p",[t._v("如果同时导入了"),r("code",[t._v("spring-boot-starter-web")]),t._v("和"),r("code",[t._v("spring-boot-starter-websocket")]),t._v(",为了避免web依赖中的tomcat和websocket中的tomcat容器冲突，要排除web中的tomcat")]),t._v(" "),r("p",[r("strong",[t._v("编写Config类")])]),t._v(" "),r("div",{staticClass:"language-java extra-class"},[r("pre",{pre:!0,attrs:{class:"language-java"}},[r("code",[t._v("\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);