(window.webpackJsonp=window.webpackJsonp||[]).push([[192],{395:function(e,t,n){"use strict";n.r(t);var a=n(5),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"swagger配置多扫描路径"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#swagger配置多扫描路径"}},[e._v("#")]),e._v(" swagger配置多扫描路径")]),e._v(" "),n("p",[e._v("1、RequestHandlerSelectors.any() 匹配任何controller的接口"),n("br"),e._v("\n2、RequestHandlerSelectors.withClassAnnotation() 扫描含有类注解的"),n("br"),e._v("\n3、RequestHandlerSelectors.withMethodAnnotation() 扫描含有方法注解的"),n("br"),e._v("\n3、RequestHandlerSelectors.basePackage() 扫描指定包路径")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('   public Docket createRestApi()\n    {\n        return new Docket(DocumentationType.SWAGGER_2)\n                .pathMapping("/dev-api")\n                // 用来创建该API的基本信息，展示在文档的页面中（自定义展示的信息）\n                .apiInfo(apiInfo())\n                // 设置哪些接口暴露给Swagger展示\n                .select()\n                // 扫描所有有注解的api，用这种方式更灵活\n//                .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))\n                // 扫描指定包中的swagger注解\n//                .apis(RequestHandlerSelectors.basePackage("com.bjbanner.project.tool.swagger"))\n                // 扫描所有\n                 .apis(RequestHandlerSelectors.any())\n                .paths(PathSelectors.any())\n                .build()\n                /* 设置安全模式，swagger可以设置访问token */\n                .securitySchemes(securitySchemes())\n                .securityContexts(securityContexts());\n    }\n')])])])])}),[],!1,null,null,null);t.default=s.exports}}]);