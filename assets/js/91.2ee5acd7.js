(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{296:function(a,t,r){"use strict";r.r(t);var e=r(5),v=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"数据库面试题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据库面试题"}},[a._v("#")]),a._v(" 数据库面试题")]),a._v(" "),r("blockquote",[r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#数据库三大范式"}},[a._v("数据库三大范式")])]),r("li",[r("a",{attrs:{href:"#什么是索引"}},[a._v("什么是索引")])]),r("li",[r("a",{attrs:{href:"#索引优缺点"}},[a._v("索引优缺点")])]),r("li",[r("a",{attrs:{href:"#数据库事务是什么"}},[a._v("数据库事务是什么")])]),r("li",[r("a",{attrs:{href:"#sql优化"}},[a._v("SQL优化")])]),r("li",[r("a",{attrs:{href:"#什么是内连接、左外连接、右连接"}},[a._v("什么是内连接、左外连接、右连接？")])]),r("li",[r("a",{attrs:{href:"#like声明中-和-是什么意思"}},[a._v("LIKE声明中%和_是什么意思？")])]),r("li",[r("a",{attrs:{href:"#如何显示前50行"}},[a._v("如何显示前50行")])]),r("li",[r("a",{attrs:{href:"#索引的底层实现原理和优化"}},[a._v("索引的底层实现原理和优化")])]),r("li",[r("a",{attrs:{href:"#mysql日志及分类"}},[a._v("MySQL日志及分类")])]),r("li",[r("a",{attrs:{href:"#varchar和char的区别"}},[a._v("varchar和char的区别？")])]),r("li",[r("a",{attrs:{href:"#union和union-all的区别"}},[a._v("UNION和UNION ALL的区别？")])]),r("li",[r("a",{attrs:{href:"#drop、delete、truncate区别"}},[a._v("drop、delete、truncate区别")])]),r("li",[r("a",{attrs:{href:"#dml-ddl"}},[a._v("DML&DDL")])]),r("li",[r("a",{attrs:{href:"#数据库设计步骤"}},[a._v("数据库设计步骤")])]),r("li",[r("a",{attrs:{href:"#字符集"}},[a._v("字符集")])])])]),r("p")]),a._v(" "),r("h2",{attrs:{id:"数据库三大范式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据库三大范式"}},[a._v("#")]),a._v(" 数据库三大范式")]),a._v(" "),r("details",[r("summary",[a._v("查看答案")]),r("p",[a._v("第一范式：列不可再分")]),a._v(" "),r("p",[a._v("第二范式： 不存在非主属性部分依赖于候选码")]),a._v(" "),r("p",[a._v("第三范式： 不存在传递依赖")]),a._v(" "),r("p",[a._v("三大范式是一级一级依赖的，高级范式建立在低一级范式之上。")])]),r("h2",{attrs:{id:"什么是索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是索引"}},[a._v("#")]),a._v(" 什么是索引")]),a._v(" "),r("details",[r("summary",[a._v("查看答案")]),r("p",[a._v("索引是对数据库表的一列或者多列的值进行排序的一种结构，使用索引可以快速访问数据表中的特定信息。")])]),r("h2",{attrs:{id:"索引优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引优缺点"}},[a._v("#")]),a._v(" 索引优缺点")]),a._v(" "),r("details",[r("summary",[a._v("查看答案")]),r("p",[a._v("优点：1.大大加快数据检索的速度2.加速表与表之间的连接\n缺点：1.建立索引需要占用物理空间2.对数据进行增删的时候要重新维护索引")])]),r("h2",{attrs:{id:"数据库事务是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据库事务是什么"}},[a._v("#")]),a._v(" 数据库事务是什么")]),a._v(" "),r("details",[r("summary",[a._v("查看答案")]),r("p",[a._v("事务是作为单个逻辑工作单元执行的一系列操作，这些操作作为一个整体进行提交，要么都执行要么都不执行。")]),a._v(" "),r("p",[r("strong",[a._v("原子性")]),a._v("：一个事务（transaction）中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。")]),a._v(" "),r("p",[r("strong",[a._v("一致性")]),a._v("：在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设规则，这包含资料的精确度、串联性以及后续数据库可以自发性地完成预定的工作。")]),a._v(" "),r("p",[r("strong",[a._v("隔离性")]),a._v("：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括读未提交（Read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（Serializable）。")]),a._v(" "),r("p",[r("strong",[a._v("持久性")]),a._v("：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。")])]),r("h2",{attrs:{id:"sql优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sql优化"}},[a._v("#")]),a._v(" SQL优化")]),a._v(" "),r("details",[r("summary",[a._v("查看答案")]),r("ol",[r("li",[a._v("查询语句中不要使用select*")]),a._v(" "),r("li",[a._v("减少子查询，使用关联查询代替(left jion,right jion,inner jion)")]),a._v(" "),r("li",[a._v("减少使用IN或NOT IN，使用exists，not exists活着关联语句代替")]),a._v(" "),r("li",[a._v("or的查询尽量使用union或union all代替")])])]),r("h2",{attrs:{id:"什么是内连接、左外连接、右连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是内连接、左外连接、右连接"}},[a._v("#")]),a._v(" 什么是内连接、左外连接、右连接？")]),a._v(" "),r("details",[r("summary",[a._v("查看答案")]),r("p",[a._v("你可以在 SELECT, UPDATE 和 DELETE 语句中使用 Mysql 的 JOIN 来联合多表查询。")]),a._v(" "),r("p",[a._v("JOIN 按照功能大致分为如下三类：")]),a._v(" "),r("p",[a._v("INNER JOIN（内连接,或等值连接）：获取两个表中字段匹配关系的记录。\nLEFT JOIN（左连接）：获取左表所有记录，即使右表没有对应匹配的记录。\nRIGHT JOIN（右连接）： 与 LEFT JOIN 相反，用于获取右表所有记录，即使左表没有对应匹配的记录。")])]),r("h2",{attrs:{id:"like声明中-和-是什么意思"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#like声明中-和-是什么意思"}},[a._v("#")]),a._v(" LIKE声明中%和_是什么意思？")]),a._v(" "),r("details",[r("summary",[a._v("查看答案")]),r("p",[a._v("%：表示任意 0 个或多个字符。可匹配任意类型和长度的字符，有些情况下若是中文，请使用两个百分号（%%）表示。\n_：表示任意单个字符。匹配单个任意字符，它常用来限制表达式的字符长度语句。")])]),r("h2",{attrs:{id:"如何显示前50行"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何显示前50行"}},[a._v("#")]),a._v(" 如何显示前50行")]),a._v(" "),r("details",[r("summary",[a._v("查看答案")]),r("p",[a._v("SELECT * FROM "),r("table",{attrs:{name:""}},[a._v(" LIMIT 0,50;")])])]),r("h2",{attrs:{id:"索引的底层实现原理和优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#索引的底层实现原理和优化"}},[a._v("#")]),a._v(" 索引的底层实现原理和优化")]),a._v(" "),r("p",[a._v("B+树，优化的B+树\n主要是在所有的叶子节点中增加了指向下一个叶子节点的指针，因此InnoDB建议为大部分表使用默认自增的主键作为主索引。")]),a._v(" "),r("h2",{attrs:{id:"mysql日志及分类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mysql日志及分类"}},[a._v("#")]),a._v(" MySQL日志及分类")]),a._v(" "),r("details",[r("summary",[a._v("查看答案")]),r("p",[a._v("日志记录着数据库运行过程中的各种状态信息。")]),a._v(" "),r("p",[a._v("主要包括了错误日志、查询日志、慢查询日志、二进制日志、事务日志几大类。")])]),r("h2",{attrs:{id:"varchar和char的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#varchar和char的区别"}},[a._v("#")]),a._v(" varchar和char的区别？")]),a._v(" "),r("p",[a._v("varchar变长，存储速度慢")]),a._v(" "),r("p",[a._v("char定长，存储速度更快")]),a._v(" "),r("h2",{attrs:{id:"union和union-all的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#union和union-all的区别"}},[a._v("#")]),a._v(" UNION和UNION ALL的区别？")]),a._v(" "),r("p",[a._v("union会去重排序")]),a._v(" "),r("p",[a._v("union all不去重也不排序\nunion all性能更好")]),a._v(" "),r("h2",{attrs:{id:"drop、delete、truncate区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#drop、delete、truncate区别"}},[a._v("#")]),a._v(" drop、delete、truncate区别")]),a._v(" "),r("details",[r("summary",[a._v("查看答案")]),r("p",[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/frunoob/images/202202221813097.png",alt:"微信图片_20220222181256"}})]),a._v(" "),r("p",[a._v("1、delete 和 truncate 仅仅删除表数据，drop 连表数据和表结构一起删除，打个比方，delete 是单杀，truncate 是团灭，drop 是把电脑摔了。")]),a._v(" "),r("p",[a._v("2、delete 是 DML 语句，操作完以后如果没有不想提交事务还可以回滚，truncate 和 drop 是 DDL 语句，操作完马上生效，不能回滚，打个比方，delete 是发微信说分手，后悔还可以撤回，truncate 和 drop 是直接扇耳光说滚，不能反悔。")]),a._v(" "),r("p",[a._v("3、执行的速度上，drop>truncate>delete，打个比方，drop 是神舟火箭，truncate 是和谐号动车，delete 是自行车。")])]),r("h2",{attrs:{id:"dml-ddl"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dml-ddl"}},[a._v("#")]),a._v(" DML&DDL")]),a._v(" "),r("p",[a._v("DML(Data Manipulation Language):增删查改，后端开发经常使用。")]),a._v(" "),r("p",[a._v("DDL(Data Define Language):对表定义进行修改的语句，"),r("code",[a._v("DROP")]),a._v(", "),r("code",[a._v("ALTER")]),a._v("等等。")]),a._v(" "),r("h2",{attrs:{id:"数据库设计步骤"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计步骤"}},[a._v("#")]),a._v(" 数据库设计步骤")]),a._v(" "),r("p",[a._v("分析用户对数据、性能、功能的要求，设计实体关系模型，将E-R图转化为关系模型，设计出逻辑结构，为数据库选择合适的存储结构和存取路径，最后编程、测试、试运行。")]),a._v(" "),r("ul",[r("li",[a._v("需求分析 : 分析用户的需求，包括数据、功能和性能需求。")]),a._v(" "),r("li",[a._v("概念结构设计 : 主要采用 E-R 模型进行设计，包括画 E-R 图。")]),a._v(" "),r("li",[a._v("逻辑结构设计 : 通过将 E-R 图转换成表，实现从 E-R 模型到关系模型的转换。")]),a._v(" "),r("li",[a._v("物理结构设计 : 主要是为所设计的数据库选择合适的存储结构和存取路径。")]),a._v(" "),r("li",[a._v("数据库实施 : 包括编程、测试和试运行")]),a._v(" "),r("li",[a._v("数据库的运行和维护 : 系统的运行与数据库的日常维护。")])]),a._v(" "),r("h2",{attrs:{id:"字符集"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#字符集"}},[a._v("#")]),a._v(" 字符集")]),a._v(" "),r("p",[a._v("使用utf8存储emoji和复杂文字、繁体字就会出错。")])])}),[],!1,null,null,null);t.default=v.exports}}]);