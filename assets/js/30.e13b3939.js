(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{400:function(o,t,a){"use strict";a.r(t);var r=a(22),i=Object(r.a)({},(function(){var o=this,t=o.$createElement,a=o._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[a("h1",{attrs:{id:"集合基础面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合基础面试题"}},[o._v("#")]),o._v(" 集合基础面试题")]),o._v(" "),a("blockquote",[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul")]),a("p")]),o._v(" "),a("h4",{attrs:{id:"_1-请描述一下你对集合的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-请描述一下你对集合的理解"}},[o._v("#")]),o._v(" 1. 请描述一下你对集合的理解？")]),o._v(" "),a("details",{staticStyle:{"box-sizing":"border-box",display:"block","margin-top":"0px","margin-bottom":"16px"}},[a("summary",{staticStyle:{"box-sizing":"border-box","touch-action":"manipulation",display:"list-item",cursor:"pointer",outline:"none"}},[o._v("参考答案")]),a("pre",{staticStyle:{"box-sizing":"border-box","font-size":"14px","font-family":'SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',"margin-top":"0px","margin-bottom":"1rem",overflow:"visible",display:"block",color:"rgb(33, 37, 41)",position:"relative","word-break":"break-all","border-radius":"4px","white-space":"pre-wrap"}},[o._v("  集合是 Java 中用于存放大量相同类型数据的一种方法，集合长度可变。\n集合分两大类：继承了 Collection 接口的 List 和 Set，还有 Map 接口。\n")])]),o._v(" "),a("h4",{attrs:{id:"_2-hashmap-和-hashtable-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-hashmap-和-hashtable-的区别"}},[o._v("#")]),o._v(" 2. HashMap 和 Hashtable 的区别？")]),o._v(" "),a("details",{staticStyle:{"box-sizing":"border-box",display:"block","margin-top":"0px","margin-bottom":"16px"}},[a("summary",{staticStyle:{"box-sizing":"border-box","touch-action":"manipulation",display:"list-item",cursor:"pointer",outline:"none"}},[o._v("参考答案")]),a("pre",{staticStyle:{"box-sizing":"border-box","font-size":"14px","font-family":'SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',"margin-top":"0px","margin-bottom":"1rem",overflow:"visible",display:"block",color:"rgb(33, 37, 41)",position:"relative","word-break":"break-all","border-radius":"4px","white-space":"pre-wrap"}},[o._v("  他们都实现了 Map 接口，他们二者hash算法大概一样，性能差距不大。\n  主要区别在于：\n  1. HashMap 允许有空， Hashtable 不允许。\n  2. Hashtable 的方法是 Synchronize 的，而 HashMap 不是.\n  ")])]),o._v(" "),a("h4",{attrs:{id:"_3-list-和-map-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-list-和-map-的区别"}},[o._v("#")]),o._v(" 3. List 和 Map 的区别？")]),o._v(" "),a("details",{staticStyle:{"box-sizing":"border-box",display:"block","margin-top":"0px","margin-bottom":"16px"}},[a("summary",{staticStyle:{"box-sizing":"border-box","touch-action":"manipulation",display:"list-item",cursor:"pointer",outline:"none"}},[o._v("参考答案")]),o._v("一个是存储单列数据的集合，另一个是存储键和值这样的双列数据的集合，List 中存储的数据是有顺序，并且允许重复；Map 中存储的数据是没有顺序的，其键是不能重复的，它的值是可以有重复的。")]),o._v(" "),a("h4",{attrs:{id:"_4-list、map、set-三个接口-存取元素时-各有什么特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-list、map、set-三个接口-存取元素时-各有什么特点"}},[o._v("#")]),o._v(" 4. List、Map、Set 三个接口，存取元素时，各有什么特点？")]),o._v(" "),a("details",{staticStyle:{"box-sizing":"border-box",display:"block","margin-top":"0px","margin-bottom":"16px"}},[a("summary",{staticStyle:{"box-sizing":"border-box","touch-action":"manipulation",display:"list-item",cursor:"pointer",outline:"none"}},[o._v("参考答案")]),o._v("\nList:存元素时add，元素可以重复且元素有序；取元素时可以使用get方法也可以使用iterator迭代器\nSet：存元素时add，元素不可以重复；取元素时无法取指定位置的元素只能使用Iterator接口获取全部元素再逐一遍历  \nMap接口：存元素时使用put方法每次要存储一对key/value，并且key不能重复，value可以重复；取元素时使用get方法获取指定key对应的value，也可以获取所有key的集合、所有value的集合、所有键值对的集合。\n")]),o._v(" "),a("h4",{attrs:{id:"_5-说出-arraylist-vector-linkedlist-的存储性能和特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-说出-arraylist-vector-linkedlist-的存储性能和特性"}},[o._v("#")]),o._v(" 5. 说出 ArrayList，Vector， LinkedList 的存储性能和特性 ？")]),o._v(" "),a("details",{staticStyle:{"box-sizing":"border-box",display:"block","margin-top":"0px","margin-bottom":"16px"}},[a("summary",{staticStyle:{"box-sizing":"border-box","touch-action":"manipulation",display:"list-item",cursor:"pointer",outline:"none"}},[o._v("参考答案")]),a("pre",{staticStyle:{"box-sizing":"border-box","font-size":"14px","font-family":'SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',"margin-top":"0px","margin-bottom":"1rem",overflow:"visible",display:"block",color:"rgb(33, 37, 41)",position:"relative","word-break":"break-all","border-radius":"4px","white-space":"pre-wrap"}},[o._v("  ArrayList 和 Vector 都是使用数组方式存储数据，此数组元素数大于实际存储的数据以便增加和插入元素，它们都允许直接按序号索引元素，但是插入元素要涉及数组元素移动等内存操作，所以索引数据快而插入数据慢，Vector 由于使用了 synchronized 方法（线程安全），通常性能上较 ArrayList 差，而 LinkedList 使用双向链表实现存储，按序号索引数据需要进行前向或后向遍历，但是插入数据时只需要记录本项的前后项即可，所以插入速度较快。\n  LinkedList 也是线程不安全的，LinkedList 提供了一些方法，使得 LinkedList 可以被当作堆栈和队列来使用。\n    ")])]),o._v(" "),a("h4",{attrs:{id:"_6-去掉一个-vector-集合中重复的元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-去掉一个-vector-集合中重复的元素"}},[o._v("#")]),o._v(" 6. 去掉一个 Vector 集合中重复的元素？")]),o._v(" "),a("details",{staticStyle:{"box-sizing":"border-box",display:"block","margin-top":"0px","margin-bottom":"16px"}},[a("summary",{staticStyle:{"box-sizing":"border-box","touch-action":"manipulation",display:"list-item",cursor:"pointer",outline:"none"}},[o._v("参考答案")]),a("code",{staticStyle:{"box-sizing":"border-box","font-size":"14px","font-family":'SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',color:"rgb(232, 62, 140)","overflow-wrap":"break-word"}},[o._v("Vector newVector = new Vector(); For (int i=0;i<vector.size();i++) { Object obj = vector.get(i); if(!newVector.contains(obj); newVector.add(obj); }")]),a("pre",{staticStyle:{"box-sizing":"border-box","font-size":"14px","font-family":'SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',"margin-top":"0px","margin-bottom":"1rem",overflow:"visible",display:"block",color:"rgb(33, 37, 41)",position:"relative","word-break":"break-all","border-radius":"4px","white-space":"pre-wrap"}},[o._v(" 还有一种简单的方式，HashSet set = new HashSet(vector); ")])]),o._v(" "),a("h4",{attrs:{id:"_7-collection-和-collections-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-collection-和-collections-的区别"}},[o._v("#")]),o._v(" 7. Collection 和 Collections 的区别？")]),o._v(" "),a("details",{staticStyle:{"box-sizing":"border-box",display:"block","margin-top":"0px","margin-bottom":"16px"}},[a("summary",{staticStyle:{"box-sizing":"border-box","touch-action":"manipulation",display:"list-item",cursor:"pointer",outline:"none"}},[o._v("参考答案")]),a("pre",{staticStyle:{"box-sizing":"border-box","font-size":"14px","font-family":'SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',"margin-top":"0px","margin-bottom":"1rem",overflow:"visible",display:"block",color:"rgb(33, 37, 41)",position:"relative","word-break":"break-all","border-radius":"4px","white-space":"pre-wrap"}},[o._v("  Collection 是集合类的上级接口，继承与他的接口主要有 Set 和 List.\n  Collections 是针对集合类的一个工具类，他提供一系列静态方法实现对各种集合的搜索、排序、线程安全化等操作。\n    ")])]),o._v(" "),a("h4",{attrs:{id:"_8-set-里的元素是不能重复的-那么用什么方法来区分重复与否呢-是用-还是-equals-它们有何区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-set-里的元素是不能重复的-那么用什么方法来区分重复与否呢-是用-还是-equals-它们有何区别"}},[o._v("#")]),o._v(" 8. Set 里的元素是不能重复的，那么用什么方法来区分重复与否呢? 是用 == 还是 equals()? 它们有何区别？")]),o._v(" "),a("details",{staticStyle:{"box-sizing":"border-box",display:"block","margin-top":"0px","margin-bottom":"16px"}},[a("summary",{staticStyle:{"box-sizing":"border-box","touch-action":"manipulation",display:"list-item",cursor:"pointer",outline:"none"}},[o._v("参考答案")]),a("pre",{staticStyle:{"box-sizing":"border-box","font-size":"14px","font-family":'SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',"margin-top":"0px","margin-bottom":"1rem",overflow:"visible",display:"block",color:"rgb(33, 37, 41)",position:"relative","word-break":"break-all","border-radius":"4px","white-space":"pre-wrap"}},[o._v("  Set 里的元素是不能重复的，元素重复与否是使用 equals() 方法进行判断的。\n  equals()和==的区别：略。\n    ")])]),o._v(" "),a("h4",{attrs:{id:"_9-你所知道的集合类都有哪些-主要方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-你所知道的集合类都有哪些-主要方法"}},[o._v("#")]),o._v(" 9. 你所知道的集合类都有哪些？主要方法？")]),o._v(" "),a("details",{staticStyle:{"box-sizing":"border-box",display:"block","margin-top":"0px","margin-bottom":"16px"}},[a("summary",{staticStyle:{"box-sizing":"border-box","touch-action":"manipulation",display:"list-item",cursor:"pointer",outline:"none"}},[o._v("参考答案")]),o._v(" \n    （1）List：实现类：ArrayList和Vector。主要方法：add,remove,contains,get等\n    （2）Set：实现类：Hashset和TreeSet。主要方法：add，remove，contains等\n    （3）Map：实现类：HashMap和TreeMap。主要方法：get，put，remove，contains等\n    ")]),o._v(" "),a("h4",{attrs:{id:"_10-两个对象值相同-x-equals-y-true-但却可有不同的-hash-code-这句话对不对"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-两个对象值相同-x-equals-y-true-但却可有不同的-hash-code-这句话对不对"}},[o._v("#")]),o._v(" 10. 两个对象值相同 (x.equals(y) == true)，但却可有不同的 hash code，这句话对不对？")]),o._v(" "),a("details",{staticStyle:{"box-sizing":"border-box",display:"block","margin-top":"0px","margin-bottom":"0px !important"}},[a("summary",{staticStyle:{"box-sizing":"border-box","touch-action":"manipulation",display:"list-item",cursor:"pointer",outline:"none"}},[o._v("参考答案")]),a("pre",{staticStyle:{"box-sizing":"border-box","font-size":"14px","font-family":'SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace',"margin-top":"0px","margin-bottom":"1rem",overflow:"visible",display:"block",color:"rgb(33, 37, 41)",position:"relative","word-break":"break-all","border-radius":"4px","white-space":"pre-wrap"}},[o._v("  不对，因为java对于equals和hashcode的规定是：\n1) 对象相等则hashCode一定相等；\n2) hashCode相等对象未必相等。\n")])]),o._v("  \n#### 11.线程安全的集合类有哪些？  \n::: details  \nvector，HashTable\n:::   \n#### 12.Array和ArrayList的区别？  \n::: details  \nArray可以有基本数据类型和对象，ArrayList里面必须是对象；\nArray数组长度固定，ArrayList长度可变。\n:::   \n#### 13.comparable和comparator的区别？  \n::: details  \ncomparable是一个内部比较器，用于比较两个类的大小，很多包装类已经实现了该接口，如果对内部的排序规则不满意可以使用Comparator来进行自定义规则的比较，所以灵活性上Conparator更优。\n:::  \n#### 14.List集合遍历方式？    \n::: details  \nfor循环  \nfor each循环\niterator遍历\n"),a("p",[o._v("set只有后两种方式来遍历"),a("br"),o._v("\n:::")]),o._v(" "),a("h4",{attrs:{id:"_15-arraylist的扩容机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-arraylist的扩容机制"}},[o._v("#")]),o._v(" 15.ArrayList的扩容机制")]),o._v(" "),a("details",[a("summary",[o._v("查看答案")]),a("p",[o._v("初始为10 每次扩容1.5倍")])]),a("h4",{attrs:{id:"_16-arraylist和vector的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-arraylist和vector的区别"}},[o._v("#")]),o._v(" 16.ArrayList和Vector的区别？")]),o._v(" "),a("details",[a("summary",[o._v("查看答案")]),a("p",[o._v("相同点：1.都实现了List接口2.底层数据结构都是数组"),a("br"),o._v("\n不同点：1.线程安全：前者不安全后者安全2.性能上后者由于加了线程安全锁 所以vector性能不如ArrayList3.ArrayList每次扩容1.5倍，Vector每次扩容2倍。")])]),a("h4",{attrs:{id:"_17-arraylist和linkedlist区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-arraylist和linkedlist区别"}},[o._v("#")]),o._v(" 17.ArrayList和LinkedList区别？")]),o._v(" "),a("details",[a("summary",[o._v("查看答案")]),a("ol",[a("li",[o._v("底层实现：前者是数组后者是双向链表")]),o._v(" "),a("li",[o._v("内存占用：前者需要扩容1.5倍，所以会有空间浪费。后者每个元素要存放直接前驱、直接后继和数据，所以每个元素要占用更多的空间。")]),o._v(" "),a("li",[o._v("都不是线程安全的")]),o._v(" "),a("li",[o._v("前者适合多读少增删的场景，后者适合多增删少读的场景。")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);