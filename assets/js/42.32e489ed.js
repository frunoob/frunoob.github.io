(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{453:function(r,t,n){"use strict";n.r(t);var s=n(24),i=Object(s.a)({},(function(){var r=this,t=r.$createElement,n=r._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[n("h1",{attrs:{id:"spring-framework"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-framework"}},[r._v("#")]),r._v(" Spring Framework")]),r._v(" "),n("h2",{attrs:{id:"概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[r._v("#")]),r._v(" 概述")]),r._v(" "),n("p",[r._v("Spring总结起来"),n("strong",[r._v("优点")]),r._v("如下：")]),r._v(" "),n("ul",[n("li",[r._v("低侵入式设计，代码的污染极低。")]),r._v(" "),n("li",[r._v("独立于各种应用服务器，基于Spring框架的应用，可以真正实现Write Once，Run Anywhere的承诺。")]),r._v(" "),n("li",[r._v("Spring的IoC容器降低了业务对象替换的复杂性，提高了组件之间的解耦。")]),r._v(" "),n("li",[r._v("Spring的AOP支持允许将一些通用任务如安全、事务、日志等进行集中式管理，从而提供了更好的复用。")]),r._v(" "),n("li",[r._v("Spring的ORM和DAO提供了与第三方持久层框架的良好整合，并简化了底层的数据库访问。")]),r._v(" "),n("li",[r._v("Spring的高度开放性，并不强制应用完全依赖于Spring，开发者可自由选用Spring框架的部分或全部")])]),r._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/frunoob/images/202202231843617.png",alt:"spring-overview"}})]),r._v(" "),n("h2",{attrs:{id:"spring开发环境搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring开发环境搭建"}},[r._v("#")]),r._v(" Spring开发环境搭建")]),r._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/frunoob/images/202202231849277.png",alt:"图片描述"}})]),r._v(" "),n("p",[n("strong",[r._v("Spring 三个核心的部分")]),r._v("是spring-core、spring-beans、spring-context。")]),r._v(" "),n("p",[r._v("Spring IOC 的本质就是“解耦合”方式的发展。")]),r._v(" "),n("p",[r._v("关于对象和类（或接口）之间的耦合关系，我们经历了以下三种方式：")]),r._v(" "),n("p",[r._v("通过 new 创建不同的实例对象。")]),r._v(" "),n("p",[r._v("通过工厂模式获取不同的实例对象（需要自己写工厂）。")]),r._v(" "),n("p",[r._v("通过 IOC 容器获取不同的实例对象（只需要配置）。")])])}),[],!1,null,null,null);t.default=i.exports}}]);