(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{354:function(e,t,n){"use strict";n.r(t);var a=n(5),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"ubuntu-lvm-扩容"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-lvm-扩容"}},[e._v("#")]),e._v(" ubuntu LVM 扩容")]),e._v(" "),n("p",[e._v("LVM是 Logical Volume Manager（逻辑卷管理）的简写，它是Linux环境下对磁盘分区进行管理的一种机制。常用于服务器端，目的是为了在无需停机的情况下进行分区大小的调整。普通的磁盘分区管理方式在逻辑分区划分好之后就无法改变其大小，当一个逻辑分区存放不下某个文件时，这个文件因为受上层文件系统的限制，也不能跨越多个分区来存放，所以也不能同时放到别的磁盘上。而遇到出现某个分区空间耗尽时，解决的方法通常是使用符号链接，或者使用调整分区大小的工具，但这只是暂时解决办法，没有从根本上解决问题。随着Linux的逻辑卷管理功能的出现，这些问题都迎刃而解，用户在无需停机的情况下可以方便地调整各个分区大小。")]),e._v(" "),n("p",[n("strong",[e._v("LVM基本术语")]),n("br"),e._v("\n1.PhysicalStorageMedia(物理存储介质)"),n("br"),e._v("\n指系统的物理存储设备：磁盘，如：/dev/sda等，是存储系统的最底层的存储单元。"),n("br"),e._v("\n2.Physical Volume, PV(物理卷)"),n("br"),e._v("\n指磁盘分区，是LVM的基本存储逻辑块。"),n("br"),e._v("\n3.Volume Group, VG(卷组)"),n("br"),e._v("\n类似于非LVM系统中的物理磁盘，其中一个或多个物理卷PV组成，可以在卷组上建立一个或多个逻辑卷（LV）"),n("br"),e._v("\n4.Logical Volume, LV(逻辑卷)"),n("br"),e._v("\n在逻辑卷上可以建立文件系统(/home, /usr)"),n("br"),e._v("\n5.Physical Extent, PE (物理块)"),n("br"),e._v("\nPE是PV的基本划分单位。具有唯一单位的PE是LVM寻址的最小单位。PE的大小是可配置的，默认是4MB。"),n("br"),e._v("\n6.Logical Extent, LE(逻辑块)"),n("br"),e._v("\n逻辑卷被划分为可进行寻址的基本单位LE(Logical Extent)，在同一个卷组中，LE和PE的大小是一样的，并且一一对应。")]),e._v(" "),n("p",[n("strong",[e._v("查看卷组信息")]),e._v(": "),n("code",[e._v("sudo vgdisplay")]),n("br"),e._v("\n卷组理解为windows操作系统中的物理磁盘（如一整个固态盘，或者是机械盘）")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("  --- Volume group ---\n  VG Name               ubuntu-vg  //卷组名称\n  System ID\n  Format                lvm2\n  Metadata Areas        1          \n  Metadata Sequence No  4\n  VG Access             read/write\n  VG Status             resizable\n  MAX LV                0\n  Cur LV                1\n  Open LV               1\n  Max PV                0\n  Cur PV                1\n  Act PV                1\n  VG Size               <71.48 GiB\n  PE Size               4.00 MiB     //物理块大小\n  Total PE              18298        //全部物理块个数\n  Alloc PE / Size       16829 / <65.74 GiB  //已经被占用的的物理块的大小\n  Free  PE / Size       1469 / <5.74 GiB    //空闲的物理块的大小\n  VG UUID               YQUBUl-e0OC-efFf-aiCt-1ZDF-e3XO-JVkg1S  \n")])])]),n("p",[n("strong",[e._v("物理卷信息")]),e._v(": "),n("code",[e._v("sudo pvdisplay")]),n("br"),e._v("\n即磁盘分区，每个物理卷和实际的磁盘的分区一一对应")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("  --- Physical volume ---\nPV Name               /dev/sda3\nVG Name               ubuntu-vg\nPV Size               <71.48 GiB / not usable 2.00 MiB\nAllocatable           yes\nPE Size               4.00 MiB\nTotal PE              18298\nFree PE               1469\nAllocated PE          16829\nPV UUID               5CR1B7-brZl-C8Fv-3cm3-3J4N-b1TU-8u3eBZ\n")])])]),n("p",[n("strong",[e._v("逻辑卷")]),e._v(" : "),n("code",[e._v("sudo lvdisplay")]),n("br"),e._v("\n逻辑卷可能包含多个物理卷，只是逻辑上的一个分区，实际上可能是多分物理分区配凑成的。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("  --- Logical volume ---\nLV Path                /dev/ubuntu-vg/ubuntu-lv\nLV Name                ubuntu-lv\nVG Name                ubuntu-vg\nLV UUID                W5BHsC-l8wm-40yv-xTgi-EGW8-iNcs-46MfHy\nLV Write Access        read/write\nLV Creation host, time ubuntu-server, 2022-06-05 00:15:59 +0000\nLV Status              available\n# open                 1\nLV Size                <65.74 GiB\nCurrent LE             16829\nSegments               1\nAllocation             inherit\nRead ahead sectors     auto\n- currently set to     256\nBlock device           253:0\n\n")])])]),n("p",[n("strong",[e._v("对逻辑卷扩容")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("sudo lvextend -L +20G /dev/mapper/ubuntu--vg-ubuntu--lv\n")])])]),n("p",[n("strong",[e._v("文件系统调整大小")]),n("br"),e._v("\n支持在线调整文件系统的大小（即不停机）")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(" sudo resize2fs  -p -F /dev/mapper/ubuntu--vg-ubuntu--lv\n")])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("resize2fs")]),e._v(" "),n("p",[e._v("resize2fs程序不能都操作分区的大小，如果想要扩容一个文件系统，需要确保你能首先扩展基础分区。可以通过使用"),n("code",[e._v("fdisk")]),e._v("删除分区并重建一个更大的分区来完成这个操作，或者如果使用逻辑卷管理"),n("code",[e._v("LVM")]),e._v("可以使用"),n("code",[e._v("lvextend")]),e._v("来完成同样的操作。在重建分区的时候，一定要注意一点，"),n("strong",[e._v("要创建和之前具有相同起始磁盘柱头的分区")]),e._v("，否则将失去整个文件系统的内容。")])])])}),[],!1,null,null,null);t.default=s.exports}}]);