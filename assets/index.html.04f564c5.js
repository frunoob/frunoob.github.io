import { c as createStaticVNode } from "./app.c8f5cdad.js";
import { _ as _export_sfc } from "./plugin-vue_export-helper.21dcd24c.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1>TypeScript</h1><h2>&quot;??&quot;</h2><p>NaN, 0, void 0, undefined, &quot;&quot;, null, false . above all of them are considered to be falsy in javascript. &quot;??&quot; is to omit null and undefined, until apear other value. so &quot;??&quot; is just use to jump over null and undefined, when appear first value that not be the (null and undefined), it will return that value.</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code>console.log(false ?? null); // false\nconsole.log(null ?? false); // false\nconsole.log(undefined ?? null); // null\nconsole.log(undefined ?? NaN); // NaN\nconsole.log(undefined ?? null ?? void 0 ?? false); // false PS. void 0 actually means undefined\n</code></pre></div><h2>&quot;||&quot;</h2><p>&quot;||&quot; is use to discard values that are considered as falsy,return the true value.It will return the last one,if there is no true value.</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code>console.log(false || true); // true\nconsole.log(0 || 1); // 1\nconsole.log(NaN || &quot;A&quot;); // &quot;A&quot;\nconsole.log(void 0 || 0o12); // 10\nconsole.log(undefined || 0b11); //3\nconsole.log(null || &#39;a&#39;); // &#39;a&#39;\nconsole.log(false || 0 || NaN || void 0 || null || undefined || true); // true\nconsole.log(false || 0 || NaN || void 0 || null || undefined); // undefined\n</code></pre></div><h2>&quot;&amp;&amp;&quot;</h2><p>&quot;&amp;&amp;&quot; is use to discard values that are considered as true value, until apear false value .It will return the last one,if there is no false value.</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code>{\nconsole.log( void 0 &amp;&amp; undefined); //undefined\nconsole.log(null &amp;&amp; undefined); //null\nlet str:string =&#39;2&#39;; \nlet int:Number = 1;\nconsole.log(str &amp;&amp; int) // 1\nconsole.log(100 &amp;&amp; true); //true\n}\n</code></pre></div>', 10);
function _sfc_render(_ctx, _cache) {
  return _hoisted_1;
}
var index_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { index_html as default };
